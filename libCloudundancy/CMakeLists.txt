project(libCloudundancy)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
if(UNIX)
   include_directories(${CMAKE_CURRENT_SOURCE_DIR})
endif()

folder_source_group(Components)
folder_source_group(Compiler)
folder_source_group_subfolder(Components Args)
folder_source_group_subfolder(Components Asserters)
folder_source_group_subfolder(Components Console)
folder_source_group_subsubfolder(Components Console Windows)
folder_source_group_subfolder(Components Docopt)
folder_source_group_subfolder(Components Environment)
folder_source_group_subfolder(Components ErrorHandling)
folder_source_group_subfolder(Components Exception)
folder_source_group_subfolder(Components SubPrograms)
folder_source_group_subfolder(Components FileSystem)
folder_source_group_subfolder(Components FunctionCallers)
folder_source_group_subsubfolder(Components FunctionCallers Member)
folder_source_group_subfolder(Components IniFile)
folder_source_group_subfolder(Components Iteration)
folder_source_group_subsubfolder(Components Iteration ForEach)
folder_source_group_subsubfolder(Components Iteration Transform)
folder_source_group_subfolder(Components Memory)
folder_source_group_subfolder(Components Process)
folder_source_group_subsubfolder(Components Process Linux)
folder_source_group_subsubfolder(Components Process Windows)
folder_source_group_subfolder(Components Time)
folder_source_group_subfolder(Components Types)
folder_source_group(Enums)
folder_source_group(Exceptions)
folder_source_group(StaticUtilities)
folder_source_group(ValueTypes)

file(GLOB_RECURSE Sources *.h *.cpp *.ui)
source_group("" FILES ${Sources})

add_library(libCloudundancy ${Sources})
if(UNIX)
   if(NOT IncludeWhatYouUseMode)
      target_precompile_headers(libCloudundancy PRIVATE pch.h)
      set_target_properties(libCloudundancy PROPERTIES UNITY_BUILD ON)
      set_target_properties(libCloudundancy PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   endif()
   set_target_properties(libCloudundancy PROPERTIES DEBUG_OUTPUT_NAME "CloudundancyDebug")
   set_target_properties(libCloudundancy PROPERTIES RELWITHDEBINFO_OUTPUT_NAME "CloudundancyRelWithDebInfo")
elseif(MSVC)
   IfMSVCEnablePrecompiledHeaders()
   replace(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Ob1" "/Ob2")
   append(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Oi /Ot /GS- /arch:AVX2 /fp:fast")

   set_target_properties(libCloudundancy PROPERTIES UNITY_BUILD ON)
   set_target_properties(libCloudundancy PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   append(CMAKE_CXX_FLAGS "/FIpch.h")

   set_target_properties(libCloudundancy PROPERTIES DEBUG_OUTPUT_NAME "libCloudundancyDebug")
   set_target_properties(libCloudundancy PROPERTIES RELWITHDEBINFO_OUTPUT_NAME "libCloudundancyRelWithDebInfo")
endif()

if(UNIX)
   if(LCovCodeCoverageMode)
     target_link_libraries(libCloudundancy CodeCovLibraryInterface)
   endif()
endif()
