project(libCloudundancyTests)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
if(UNIX)
   include_directories(${CMAKE_CURRENT_SOURCE_DIR})
endif()
include_directories(${ZenUnitAndMetalMockIncludeDirectory})

folder_source_group(Components)
folder_source_group_subfolder(Components Args)
folder_source_group_subsubfolder(Components Args MetalMock)
folder_source_group_subfolder(Components Asserters)
folder_source_group_subsubfolder(Components Asserters MetalMock)
folder_source_group_subfolder(Components Compiler)
folder_source_group_subfolder(Components FileSystem)
folder_source_group_subsubfolder(Components FileSystem MetalMock)
folder_source_group_subfolder(Components IniFile)
folder_source_group_subsubfolder(Components IniFile MetalMock)
folder_source_group_subsubfolder(Components IniFile ForEach)
folder_source_group_subfolder(Components Random)
folder_source_group_subsubfolder(Components Random MetalMock)
folder_source_group_subfolder(Components SubPrograms)
folder_source_group_subsubfolder(Components SubPrograms MetalMock)
folder_source_group_subfolder(Components Time)
folder_source_group_subsubfolder(Components Time MetalMock)
folder_source_group_subfolder(Components Types)
folder_source_group_subfolder(Components MetalMock)
folder_source_group(Enums)
folder_source_group(Exceptions)
folder_source_group(StaticUtilities)
folder_source_group(UtilityComponents)
folder_source_group_subfolder(UtilityComponents Assertion)
folder_source_group_subsubfolder(UtilityComponents Assertion MetalMock)
folder_source_group_subfolder(UtilityComponents Console)
folder_source_group_subsubfolder(UtilityComponents Console MetalMock)
folder_source_group_subfolder(UtilityComponents Docopt)
folder_source_group_subsubfolder(UtilityComponents Docopt MetalMock)
folder_source_group_subfolder(UtilityComponents Environment)
folder_source_group_subsubfolder(UtilityComponents Environment MetalMock)
folder_source_group_subfolder(UtilityComponents ErrorHandling)
folder_source_group_subsubfolder(UtilityComponents ErrorHandling MetalMock)
folder_source_group_subfolder(UtilityComponents Exception)
folder_source_group_subsubfolder(UtilityComponents Exception MetalMock)
folder_source_group_subfolder(UtilityComponents FileSystem)
folder_source_group_subsubfolder(UtilityComponents FileSystem MetalMock)
folder_source_group_subfolder(UtilityComponents FunctionCallers)
folder_source_group_subsubfolder(UtilityComponents FunctionCallers Member)
folder_source_group_subsubsubfolder(UtilityComponents FunctionCallers Member MetalMock)
folder_source_group_subfolder(UtilityComponents Iteration)
folder_source_group_subsubfolder(UtilityComponents Iteration ForEach)
folder_source_group_subsubsubfolder(UtilityComponents Iteration ForEach MetalMock)
folder_source_group_subsubfolder(UtilityComponents Iteration Tranform)
folder_source_group_subsubsubfolder(UtilityComponents Iteration Tranform MetalMock)
folder_source_group_subfolder(UtilityComponents Iteration)
folder_source_group_subsubfolder(UtilityComponents Iteration ForEach)
folder_source_group_subsubsubfolder(UtilityComponents Iteration ForEach MetalMock)
folder_source_group_subsubfolder(UtilityComponents Iteration Math)
folder_source_group_subsubsubfolder(UtilityComponents Iteration Math MetalMock)
folder_source_group_subsubfolder(UtilityComponents Iteration Transform)
folder_source_group_subsubsubfolder(UtilityComponents Iteration Transform MetalMock)
folder_source_group_subfolder(UtilityComponents Memory)
folder_source_group_subsubfolder(UtilityComponents Memory MetalMock)
folder_source_group_subfolder(UtilityComponents Process)
folder_source_group_subsubfolder(UtilityComponents Process Linux)
folder_source_group_subsubsubfolder(UtilityComponents Process Linux MetalMock)
folder_source_group_subsubfolder(UtilityComponents Process Windows)
folder_source_group_subsubsubfolder(UtilityComponents Process Windows MetalMock)
folder_source_group_subsubfolder(UtilityComponents Process MetalMock)
folder_source_group_subfolder(UtilityComponents Random)
folder_source_group_subsubfolder(UtilityComponents Random MetalMock)
folder_source_group_subfolder(UtilityComponents Time)
folder_source_group_subsubfolder(UtilityComponents Time MetalMock)
folder_source_group(ValueTypes)
folder_source_group_subfolder(ValueTypes ZenUnit)

file(GLOB_RECURSE Sources *.h *.cpp)
source_group("" FILES ${Sources})

add_executable(libCloudundancyTests ${Sources})

target_link_libraries(libCloudundancyTests libCloudundancy)
if(UNIX)
   if(NOT IncludeWhatYouUseMode)
      target_precompile_headers(libCloudundancyTests PRIVATE pch.h)
      set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD ON)
      set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   endif()
elseif(MSVC)
   IfMSVCEnablePrecompiledHeaders()
   IfMSVCAddRunTestsPostBuildStep()
   replace(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/O2" "/Od")
   replace(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Ob2" "/Ob0")
   replace(CMAKE_EXE_LINKER_FLAGS_DEBUG "/debug" "/DEBUG:FASTLINK")
   replace(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "/debug" "")

   set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD ON)
   set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   append(CMAKE_CXX_FLAGS "/FIpch.h")
endif()

if(UNIX)
   if(LCovCodeCoverageMode)
     target_link_libraries(libCloudundancyTests CodeCovLibraryInterface)
   endif()
endif()
