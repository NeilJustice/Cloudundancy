project(libCloudundancyTests)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
if(UNIX)
   include_directories(${CMAKE_CURRENT_SOURCE_DIR})
endif()
include_directories(${ZenUnitAndMetalMockIncludeDirectory})

folder_source_group(Components)
folder_source_group_subfolder(Components Args)
folder_source_group_subsubfolder(Components Args MetalMock)
folder_source_group_subfolder(Components Asserters)
folder_source_group_subsubfolder(Components Asserters MetalMock)
folder_source_group_subfolder(Components Compiler)
folder_source_group_subfolder(Components Console)
folder_source_group_subsubfolder(Components Console MetalMock)
folder_source_group_subfolder(Components Docopt)
folder_source_group_subsubfolder(Components Docopt MetalMock)
folder_source_group_subfolder(Components Environment)
folder_source_group_subsubfolder(Components Environment MetalMock)
folder_source_group_subfolder(Components ErrorHandling)
folder_source_group_subsubfolder(Components ErrorHandling MetalMock)
folder_source_group_subfolder(Components Exception)
folder_source_group_subsubfolder(Components Exception MetalMock)
folder_source_group_subfolder(Components FileSystem)
folder_source_group_subsubfolder(Components FileSystem MetalMock)
folder_source_group_subfolder(Components FunctionCallers)
folder_source_group_subsubfolder(Components FunctionCallers Member)
folder_source_group_subsubsubfolder(Components FunctionCallers Member MetalMock)
folder_source_group_subfolder(Components IniFile)
folder_source_group_subsubfolder(Components IniFile MetalMock)
folder_source_group_subsubfolder(Components IniFile ForEach)
folder_source_group_subfolder(Components Iteration)
folder_source_group_subsubfolder(Components Iteration ForEach)
folder_source_group_subsubsubfolder(Components Iteration ForEach MetalMock)
folder_source_group_subsubfolder(Components Iteration Tranform)
folder_source_group_subsubsubfolder(Components Iteration Tranform MetalMock)
folder_source_group_subfolder(Components Iteration)
folder_source_group_subsubfolder(Components Iteration ForEach)
folder_source_group_subsubsubfolder(Components Iteration ForEach MetalMock)
folder_source_group_subsubfolder(Components Iteration Math)
folder_source_group_subsubsubfolder(Components Iteration Math MetalMock)
folder_source_group_subsubfolder(Components Iteration Transform)
folder_source_group_subsubsubfolder(Components Iteration Transform MetalMock)
folder_source_group_subfolder(Components Memory)
folder_source_group_subsubfolder(Components Memory MetalMock)
folder_source_group_subfolder(Components Process)
folder_source_group_subsubfolder(Components Process Linux)
folder_source_group_subsubsubfolder(Components Process Linux MetalMock)
folder_source_group_subsubfolder(Components Process Windows)
folder_source_group_subsubsubfolder(Components Process Windows MetalMock)
folder_source_group_subsubfolder(Components Process MetalMock)
folder_source_group_subfolder(Components Random)
folder_source_group_subsubfolder(Components Random MetalMock)
folder_source_group_subfolder(Components SubPrograms)
folder_source_group_subsubfolder(Components SubPrograms MetalMock)
folder_source_group_subfolder(Components Time)
folder_source_group_subsubfolder(Components Time MetalMock)
folder_source_group_subfolder(Components Types)
folder_source_group(Enums)
folder_source_group(Exceptions)
folder_source_group(StaticUtilities)
folder_source_group(ValueTypes)
folder_source_group_subfolder(ValueTypes ZenUnit)

file(GLOB_RECURSE Sources *.h *.cpp)
source_group("" FILES ${Sources})

add_executable(libCloudundancyTests ${Sources})

target_link_libraries(libCloudundancyTests libCloudundancy)
if(UNIX)
   if(NOT IncludeWhatYouUseMode)
      target_precompile_headers(libCloudundancyTests PRIVATE pch.h)
      set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD ON)
      set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   endif()
elseif(MSVC)
   IfMSVCEnablePrecompiledHeaders()
   IfMSVCAddRunTestsPostBuildStep()
   replace(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/O2" "/Od")
   replace(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Ob2" "/Ob0")
   replace(CMAKE_EXE_LINKER_FLAGS_DEBUG "/debug" "/DEBUG:FASTLINK")
   replace(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "/debug" "")

   set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD ON)
   set_target_properties(libCloudundancyTests PROPERTIES UNITY_BUILD_BATCH_SIZE 8)
   append(CMAKE_CXX_FLAGS "/FIpch.h")
endif()

if(UNIX)
   if(LCovCodeCoverageMode)
     target_link_libraries(libCloudundancyTests CodeCovLibraryInterface)
   endif()
endif()
