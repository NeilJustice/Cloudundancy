name: Cloudundancy

on: [push]

jobs:
  build:
    strategy:
      matrix:
         os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
        
      #- uses: actions/cache@v2
       # with:
        #  path: ${{ env.pythonLocation }}
         # key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}
        
      - name: Install pip packages
        run: pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt
        
      - name: mypy, flake8, pylint, then run all unit tests with coverage and pytest
        run: python CloudundancyPyUtils/MypyFlake8PylintThenRunTestsWithCoverage.py --run-tests-with-coverage-python-file=CloudundancyPyUtilsTests/RunAllWithCoverage.py
        working-directory: CloudundancyPyUtils
        env:          
          PYTHONPATH: "."
      
      - name: Install ninja-build
        run: sudo apt-get install ninja-build lcov
        
      - name: Download ZenUnit.h and MetalMock.h
        run: |
          curl https://raw.githubusercontent.com/NeilJustice/ZenUnitAndMetalMock/main/ZenUnitAndMetalMock/ZenUnit.h --create-dirs -o "$GITHUB_WORKSPACE/ZenUnitAndMetalMock/ZenUnit.h"
          curl https://raw.githubusercontent.com/NeilJustice/ZenUnitAndMetalMock/main/ZenUnitAndMetalMock/MetalMock.h --create-dirs -o "$GITHUB_WORKSPACE/ZenUnitAndMetalMock/MetalMock.h"
      
      - name: Run BuildAndInstallCPlusPlusProgram.py
        run: |
           python CloudundancyPyUtils/CloudundancyPyUtils/BuildAndInstallCPlusPlusProgram.py \
              --solution-name=Cloudundancy \
              --cmake-generator=Ninja \
              --cmake-build-type=Release \
              --tests-project-name=libCloudundancyTests \
              --no-install
        env:
          CXX: "/usr/bin/clang++"
          PYTHONPATH: CloudundancyPyUtils
          
      - uses: codecov/codecov-action@v1
        with:
          files: CloudundancyPyUtils/CloudundancyPyUtilsTests/CoberturaCodeCoverageResults_CloudundancyPyUtilsTests.xml
          fail_ci_if_error: true

  sonarcloud:
    name: SonarCloud scan CloudundancyPyUtils
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
