os: linux
virt: vm
dist: focal
group: edge
arch: amd64
language: cpp
cache:
   ccache: true
   directories:
      - $HOME/Library/Caches/Homebrew
sudo: false

git:
  depth: false

matrix:
  include:
    - os: linux
      compiler: clang
      env: CMAKE_BUILD_TYPE=Debug COMPILER=clang++-9 CODE_COV_MODE=OFF
      addons:
        apt:
          update: true
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages: [ 'ninja-build', 'clang-9', 'libstdc++-9-dev' ]

    - os: linux
      compiler: clang
      env: CMAKE_BUILD_TYPE=Release COMPILER=clang++-9 CODE_COV_MODE=OFF
      addons:
        apt:
          update: true
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages: [ 'ninja-build', 'clang-9', 'libstdc++-9-dev' ]

    - os: linux
      compiler: gcc
      env: CMAKE_BUILD_TYPE=Debug COMPILER=g++ CODE_COV_MODE=OFF
      addons:
        apt:
          update: true
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages: [ 'ninja-build' ]

    - os: linux
      compiler: gcc
      env: CMAKE_BUILD_TYPE=Release COMPILER=g++ CODE_COV_MODE=ON
      addons:
        apt:
          update: true
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages: [ 'ninja-build' ]

    #- os: osx
     # osx_image: xcode12.2
      #compiler: clang
      #env: CMAKE_BUILD_TYPE=Debug COMPILER=clang++ CODE_COV_MODE=OFF
      #before_install:
       #  - brew install ninja

    #- os: osx
     # osx_image: xcode12.2
      #compiler: clang
      #env: CMAKE_BUILD_TYPE=Release COMPILER=clang++ CODE_COV_MODE=OFF
      #before_install:
      #- brew install ninja

script: ./travis_script.sh

notifications:
  email: true
